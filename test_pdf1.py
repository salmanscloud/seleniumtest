# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestPdf1():
  def setup_method(self, method):
    self.driver = webdriver.Remote(command_executor='https://www.regulations.gov/', desired_capabilities=DesiredCapabilities.FIREFOX)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_pdf1(self):
    # Test name: pdf1
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("https://www.regulations.gov/")
    # 2 | setWindowSize | 550x695 | 
    self.driver.set_window_size(550, 695)
    # 3 | runScript | window.scrollTo(0,12.800000190734863) | 
    self.driver.execute_script("window.scrollTo(0,12.800000190734863)")
    # 4 | click | css=#ember69 > .truncate-multiline--last-line-wrapper > span | 
    self.driver.find_element(By.CSS_SELECTOR, "#ember69 > .truncate-multiline--last-line-wrapper > span").click()
    # 5 | mouseOver | id=ember76 | 
    element = self.driver.find_element(By.ID, "ember76")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 6 | mouseOut | id=ember76 | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 7 | click | css=.btn-block > .btn | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-block > .btn").click()
    # 8 | click | css=li:nth-child(1) > .text-uppercase | 
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(1) > .text-uppercase").click()
    # 9 | click | id=ember88 | 
    self.driver.find_element(By.ID, "ember88").click()
  
